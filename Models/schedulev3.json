{
    "openapi": "3.0.1",
    "info": {
      "title": "CAE Schedule Service",
      "description": "OpenAPI definition for CAE Schedule Service microservice. It provides information related to the Schedules",
      "contact": {
        "email": "d9b9c3c6.CAEPortal.onmicrosoft.com@emea.teams.ms"
      },
      "version": "3.0.0"
    },
    "externalDocs": {
      "description": "API Governance",
      "url": "https://dev.azure.com/caeglobal/Digital/_git/EnterpriseArchitecture?path=/Standards/STD-3000-Applications/STD-3002-API%20Governance/API%20Governance.md&version=GBAPI_governance&_a=preview"
    },
    "servers": [
      {
        "url": "https://apiprivate.devcloud.cae.com/training/schedule-service/v3"
      }
    ],
    "security": [
      {
        "client_creds_auth": [
          "schedules.ReadWrite.All"
        ]
      }
    ],
    "tags": [
      {
        "name": "Schedules",
        "description": "Informations about Schedules"
      }
    ],
    "paths": {
      "/schedules/{scheduleId}": {
        "get": {
          "tags": [
            "Schedules"
          ],
          "summary": "Get a Schedule",
          "description": "Get a Schedule",
          "operationId": "getSchedule",
          "parameters": [
            {
              "$ref": "#/components/parameters/ScheduleId"
            }
          ],
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/ErrorResponse_400"
            },
            "401": {
              "$ref": "#/components/responses/ErrorResponse_401"
            },
            "403": {
              "$ref": "#/components/responses/ErrorResponse_403"
            },
            "404": {
              "$ref": "#/components/responses/ErrorResponse_404"
            }
          },
          "security": [
            {
              "client_creds_auth": [
                "schedules.ReadWrite.All"
              ]
            }
          ]
        },
        "put": {
          "tags": [
            "Schedules"
          ],
          "summary": "Update a Schedule",
          "description": "Update a Schedule",
          "operationId": "updateSchedule",
          "parameters": [
            {
              "$ref": "#/components/parameters/ScheduleId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/ErrorResponse_400"
            },
            "401": {
              "$ref": "#/components/responses/ErrorResponse_401"
            },
            "403": {
              "$ref": "#/components/responses/ErrorResponse_403"
            },
            "404": {
              "$ref": "#/components/responses/ErrorResponse_404"
            }
          },
          "security": [
            {
              "client_creds_auth": [
                "schedules.ReadWrite.All"
              ]
            }
          ]
        }
      },
      "/schedules": {
        "post": {
          "tags": [
            "Schedules"
          ],
          "summary": "Add a Schedule",
          "description": "Add a Schedule",
          "operationId": "addSchedule",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/ErrorResponse_400"
            },
            "401": {
              "$ref": "#/components/responses/ErrorResponse_401"
            },
            "403": {
              "$ref": "#/components/responses/ErrorResponse_403"
            },
            "404": {
              "$ref": "#/components/responses/ErrorResponse_404"
            },
            "409": {
              "$ref": "#/components/responses/ErrorResponse_409"
            }
          },
          "security": [
            {
              "client_creds_auth": [
                "schedules.ReadWrite.All"
              ]
            }
          ]
        },
        "get": {
          "tags": [
            "Schedules"
          ],
          "summary": "Get All Schedules by filters.",
          "description": "Get All Schedules by filters.",
          "operationId": "getSchedules",
          "parameters": [
            {
              "name": "trainingEventIds",
              "in": "query",
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Schedule"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/ErrorResponse_400"
            },
            "401": {
              "$ref": "#/components/responses/ErrorResponse_401"
            },
            "403": {
              "$ref": "#/components/responses/ErrorResponse_403"
            },
            "404": {
              "$ref": "#/components/responses/ErrorResponse_404"
            }
          },
          "security": [
            {
              "client_creds_auth": [
                "schedules.ReadWrite.All"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Schedule": {
          "type": "object",
          "properties": {
            "scheduleId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "trainingCenterId": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "DateType"
            },
            "endDate": {
              "type": "string",
              "format": "DateType"
            },
            "appointmentType": {
              "type": "string"
            },
            "unitName": {
              "type": "string"
            },
            "trainingEventIds": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "instructors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Instructors"
              }
            },
            "trainingDetails": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TrainingDetails"
              }
            },
            "trainingType": {
              "type": "string"
            }
          }
        },
        "Instructors": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          }
        },
        "TrainingDetails": {
          "type": "object",
          "properties": {
            "resourceName": {
              "type": "string"
            },
            "unitName": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "DateType"
            }
          }
        },
        "DateType": {
          "type": "string",
          "format": "date-time",
          "description": "date - Format ISO 8601",
          "pattern": "^(19|20)\\d\\d[-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0123]??):(0[0-9]|[12345][0-9]):(0[0-9]|[12345][0-9])(.(\\d{3}))?([+-](2[0-3]|[01][0-9]):?([0-5][0-9])|Z)$",
          "maxLength": 29,
          "example": "2018-10-11T23:59:10-05:00"
        },
        "RestProblem": {
          "type": "object",
          "description": "API problem detail - inspired from [RFC7807] / Détail du problème de l'API - inspiré de la [RFC7807](https://datatracker.ietf.org/doc/html/rfc7807)",
          "required": [
            "status",
            "type"
          ],
          "properties": {
            "status": {
              "type": "integer",
              "format": "int32",
              "minimum": 100,
              "maximum": 600,
              "exclusiveMaximum": 600,
              "description": "EN: HTTP status code ([RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6), Section 6) generated by the origin server for this occurrence of the problem. This status serves in case a gateway or proxy would change the original http code.",
              "example": 403
            },
            "type": {
              "type": "string",
              "format": "uri-reference",
              "pattern": "^(apiproblem\\/).{3,}$",
              "description": "EN: Error code. \n\n URI is relative to the base URL server definition in the API contract (servers.url), but it is **not mandatory for it to resolve**. When resolving, it should provide a description of the corresponding error.  \n\n *This is a subset of http status to provide more granular definition. Refer to each resource error response definition for the list of available codes. Note that the list is never exhaustive and the consumer should be able to handle any unknown code. \n\n FR: Code de l'erreur. \n\n L'URI est relative à l'URL de base du serveur définie dans le contrat (servers.url), mais il n'est **pas obligatoire qu'elle résolve**. Lorsque l'URI résoud, la page résultante doit fournir une description de l'erreur correspondante. \n\n *Ceci est un sous ensemble du statut http pour fournir de l'information plus granulaire. Veuillez vous référer à la définition de chaque réponse d'erreur dans les ressources pour connaitre la liste des codes disponibles. Notez que ces listes ne sont jamais exhaustives et les consommateurs doivent toujours être en mesure de recevoir un nouveau code inconnu.",
              "example": "apiproblem/out-of-stock"
            },
            "title": {
              "type": "string",
              "description": "EN: A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.",
              "example": "some title for the error situation"
            },
            "detail": {
              "type": "string",
              "description": "EN: Human-readable, language-dependent representation of the error. The Content-Language header MUST contain the language code from [RFC5646] corresponding to the language in which the value for message is written. \n\n FR: Représentation de l'erreur lisible par l'homme et dépendante de la langue. L'en-tête Content-Language DOIT contenir le code de langue de la [RFC5646] correspondant à la langue dans laquelle la valeur de message est écrite.",
              "example": "Invalid parameters"
            },
            "time": {
              "type": "string",
              "description": "EN: Time of the occurence from the server perspective\n\n FR: Timestamp de l'occurence sur le serveur",
              "format": "date-time",
              "pattern": "^(19|20)\\d\\d[-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0123]??):(0[0-9]|[12345][0-9]):(0[0-9]|[12345][0-9])(.(\\d{3}))?([+-](2[0-3]|[01][0-9]):?([0-5][0-9])|Z)$",
              "maxLength": 29
            },
            "issues": {
              "type": "array",
              "description": "EN: Error list \n\nFR: Liste d'erreur",
              "items": {
                "$ref": "#/components/schemas/RestError"
              }
            }
          }
        },
        "RestError": {
          "type": "object",
          "description": "EN: Error detail\n\n FR: Détail de l'erreur",
          "properties": {
            "field": {
              "type": "string",
              "description": "EN: Name of the field \n\n FR:Cible de l'erreur particulière (par exemple, le nom de la propriété en erreur)",
              "example": "DateType"
            },
            "code": {
              "type": "string",
              "description": "EN: Error code. \n\n FR: Code de l'erreur."
            },
            "message": {
              "type": "string",
              "description": "EN: Human-readable, language-dependent representation of the error. The Content-Language header MUST contain the language code from [RFC5646] corresponding to the language in which the value for message is written. \n\n FR: Représentation de l'erreur lisible par l'homme et dépendante de la langue. L'en-tête Content-Language DOIT contenir le code de langue de la [RFC5646] correspondant à la langue dans laquelle la valeur de message est écrite."
            },
            "systemId": {
              "type": "string",
              "description": "EN:Identifier of the source system of the error\n\n FR:Identifiant du système source de l'erreur"
            },
            "meta": {
              "$ref": "#/components/schemas/ErrorMetadata"
            }
          }
        },
        "ErrorMetadata": {
          "type": "object",
          "description": "EN: ONLY FOR **NON-PRODUCTION** ENVIRONMENTS\n\n Error metadata, as Key-Value pairs\n\n FR: SEULEMENT POUR LES ENVIRONNEMENTS DE **NON-PRODUCTION**\n\n Métadonnées de l'erreur, sous forme de clés-valeurs.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Request's unique identifier / Identifiant unique de la requête"
            },
            "stackTrace": {
              "type": "string",
              "description": "Stack trace / Trace de la pile"
            },
            "additionalProperties": {
              "type": "object",
              "properties": {},
              "description": "Other API specific Key-Value pairs/D'autres clés-valeurs spécifiques à l'API"
            }
          },
          "example": {
            "id": "cca018cf3bd9d6a0",
            "stackTrace": "java.lang.NullPointerException: null",
            "proprieteAdditionnelle1": "string",
            "proprieteAdditionnelle2": {
              "keyName": "value"
            }
          }
        },
        "Context": {
          "type": "object",
          "description": "The context is useful for traceability. It should not be used for security nor for business rules.",
          "properties": {
            "callerAppId": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string",
              "description": "Identifier of the application doing the request",
              "example": "Workday"
            },
            "callerUserId": {
              "maxLength": 24,
              "minLength": 1,
              "type": "string",
              "description": "Identifier of the user making the call. Sometimes, the API authenticated user can be a service account, but it's still useful to be able to identify the user making the call. Ex.:non AD consumers",
              "example": "ptremblay"
            },
            "servedDepartmentId": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string",
              "description": "Id of the department on which the request is launched. Sometimes, requests are executed by an application on behalf of a specific business units. This can be useful for billing purposes.",
              "example": "civil"
            },
            "costCenter": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string",
              "description": "Id of the cost center to which charging the service",
              "example": "4017"
            }
          }
        }
      },
      "parameters": {
        "ScheduleId": {
          "name": "scheduleId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "Take": {
          "name": "take",
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "Skip": {
          "name": "skip",
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "OrderBy": {
          "name": "orderBy",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "Order": {
          "name": "order",
          "in": "query",
          "schema": {
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          }
        },
        "Match": {
          "name": "match",
          "in": "query",
          "description": "Matching type for string query filters",
          "schema": {
            "enum": [
              "exact",
              "startWith",
              "contains"
            ],
            "default": "exact"
          }
        }
      },
      "securitySchemes": {
        "client_creds_auth": {
          "type": "oauth2",
          "flows": {
            "clientCredentials": {
              "tokenUrl": "https://login.microsoftonline.com/006c1e48-e342-47e9-ab5d-0dd9ff89bd96/oauth2/v2.0/token",
              "scopes": {
                "schedules.ReadWrite.All": "Can read and write all schedules"
              }
            }
          }
        }
      },
      "responses": {
        "ErrorResponse_400": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n BAD-REQUEST|en|apiproblem/bad-request|Invalid request content\n BAD-REQUEST|fr|apiproblem/bad-request|Contenu de la requête invalides\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|MANDATORY-FIELD|Field « %s » is mandatory.\n fr|MANDATORY-FIELD|Le champ « %s » est obligatoire.\n fr|INVALID-SYNTAX|La syntaxe du champ « %s » n’est pas valide.\n en|INVALID-SYNTAX|The syntax of the « %s » field is not valid.\n en|INVALID-FIELD-SIZE|The size of the « %s » field must be between « %s » and « %s ».\n fr|INVALID-FIELD-SIZE|La taille du champ « %s » doit être comprise entre « %s » et « %s ».\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 400,
                "type": "apiproblem/bad-request",
                "title": "Invalid request content",
                "detail": "Invalid request content",
                "issues": [
                  {
                    "field": "fieldName",
                    "code": "MANDATORY-FIELD",
                    "message": "Field {{fieldName}} is mandatory.",
                    "systemId": "SomeSystemId"
                  },
                  {
                    "field": "fieldOther",
                    "code": "INVALID-SYNTAX",
                    "message": "The syntax of the {{fieldOther}} field is not valid.",
                    "systemId": "SomeSystemId"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_401": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n UNAUTHORIZED|en|apiproblem/unauthorized|User not authorized\n UNAUTHORIZED|fr|apiproblem/unauthorized|Utilisateur non autorisé\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|UNAUTHORIZED|User not authorized\n fr|UNAUTHORIZED|Utilisateur non autorisé\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 401,
                "type": "apiproblem/unauthorized",
                "title": "User not authorized",
                "detail": "User not authorized"
              }
            }
          }
        },
        "ErrorResponse_403": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n FORBIDDEN|en|apiproblem/forbidden|Rejected action. Functional Error\n FORBIDDEN|fr|apiproblem/forbidden|Action refusée. Erreur fonctionnelle\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|BR-EXAMPLE-1|Description of the broken business rule.\n fr|BR-EXAMPLE-1|Description de la règle d'affaire brisée. \n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 403,
                "type": "apiproblem/forbidden",
                "title": "Rejected action. Functional Error",
                "detail": "Rejected action. Functional Error",
                "issues": [
                  {
                    "code": "BR-EXAMPLE-1",
                    "message": "Description of the broken business rule.",
                    "systemId": "SomeSystemId"
                  },
                  {
                    "code": "BR-EXAMPLE-2",
                    "message": "Description of the other broken business rule.",
                    "systemId": "SomeSystemId"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_404": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n NOT-FOUND|en|apiproblem/not-found|Resource not found\n NOT-FOUND|fr|apiproblem/not-found|Ressource introuvable\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|RESOURCE-ID-NOT-FOUND|The id of the requested resource has not been found. \n fr|RESOURCE-ID-NOT-FOUND|L'id de la ressource demandé n'a pas été trouvé. \n en|RESOURCE-OBJECT-NOT-FOUND|The requested object resource does not exist.\n fr|RESOURCE-OBJECT-NOT-FOUND|L'objet de la resource demandé n'existe pas. \n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 404,
                "type": "apiproblem/not-found",
                "title": "Resource not found",
                "detail": "Resource not found",
                "issues": [
                  {
                    "code": "RESOURCE-OBJECT-NOT-FOUND",
                    "message": "The requested object resource does not exist.",
                    "systemId": "SomeSystemId"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_409": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n CONFLICT|en|apiproblem/conflict|Conflict CONFLICT|fr|apiproblem/conflict|Conflict\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|REQUEST-ALREADY-TREATED|This same request has already been treated previously.\n fr|REQUEST-ALREADY-TREATED|This same request has already been treated previously.\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 403,
                "type": "apiproblem/conflict",
                "title": "Rejected action. Conflict",
                "detail": "Rejected action. Conflict",
                "issues": [
                  {
                    "code": "REQUEST-ALREADY-TREATED",
                    "message": "This same request has already been treated previously.",
                    "systemId": "SomeSystemId"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_410": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n GONE|en|apiproblem/gone|Resource is gone\n GONE|fr|apiproblem/gone|La ressource n’est plus disponible\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 410,
                "type": "apiproblem/gone",
                "title": "Resource is gone",
                "detail": "Resource is gone"
              }
            }
          }
        },
        "ErrorResponse_500": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n INTERNAL-SERVER-ERROR|en|apiproblem/internal-server-error|Internal server error\n INTERNAL-SERVER-ERROR|fr|apiproblem/internal-server-error|Erreur interne du serveur. Une erreur interne dans le traitement de ce service est survenue empêchant ainsi son exécution.\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|TECHNICAL-ERROR|Unexpected error.\n fr|TECHNICAL-ERROR|Erreur inattendue. \n en|DB-ERROR|Database error.\n fr|DB-ERROR|Erreur au niveau de la base de données.\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 500,
                "type": "apiproblem/internal-server-error",
                "title": "Internal server error",
                "detail": "Internal server error",
                "issues": [
                  {
                    "code": "DB-ERROR",
                    "message": "Database error.",
                    "systemId": "SomeSystemId"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_502": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n BAD-GATEWAY|en|apiproblem/bad-gateway|This service acts as a gateway to an error from another system.\n BAD-GATEWAY|fr|apiproblem/bad-gateway|Ce service agit comme passerelle d'une erreur d'un autre système.\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n en|CRITICAL-ERROR|Error while calling the system: « %service provider% ». Support team intervention is required.\n fr|CRITICAL-ERROR|Erreur lors de l'appel au systeme: « %fournisseur du service% ». L'intervention de l'équipe de support est requise.\n en|CONTROLLED-ERROR|Error while calling the system: « %service provider% ». No intervention from the support team is required.\n fr|CONTROLLED-ERROR|Erreur lors de l'appel au systeme: « %fournisseur du service% ». Aucune intervention de l'équipe de support n'est requise.\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 502,
                "type": "apiproblem/bad-gateway",
                "title": "This service acts as a gateway to an error from another system.",
                "detail": "This service acts as a gateway to an error from another system.",
                "issues": [
                  {
                    "code": "CRITICAL-ERROR",
                    "message": "Error while calling the system: « SystemXYZ ». Support team intervention is required.",
                    "systemId": "SystemXYZ_Id"
                  }
                ]
              }
            }
          }
        },
        "ErrorResponse_503": {
          "description": "http error name|Language| type|  title\n ------------|------------|------------|------------\n SERVICE-UNAVAILABLE|en|apiproblem/service-unavailable|Service is not available\n SERVICE-UNAVAILABLE|fr|apiproblem/service-unavailable|Service non disponible\n\nSupported sub-error codes:\n / Liste de sous-codes d'erreur supportées:\n  Language| code |message\n ------------|------------|------------\n ",
          "content": {
            "application/problem+json": {
              "schema": {
                "$ref": "#/components/schemas/RestProblem"
              },
              "example": {
                "status": 503,
                "type": "apiproblem/service-unavailable",
                "title": "Service is not available",
                "detail": "System is currently in a maintenance activity. Please try again later."
              }
            }
          }
        }
      }
    }
  }
